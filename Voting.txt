import pandas as pd
import numpy as np
from sklearn import svm
from sklearn import tree
from sklearn import cross_validation
from sklearn.naive_bayes import GaussianNB
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
from sklearn.svm import SVC
from sklearn.ensemble import VotingClassifier
train = pd.read_csv("D:\Data Mining\Work\data.csv")
test = pd.read_csv("D:\Data Mining\Work\data.csv")
cols = ['GROUP','ID','THICKNESS','SIZEUNF','SHAPEUNF','ADHESION','EPI','BARE','BLAND','NORMAL','MITOSIS']
colsRes = ['DIAGNOSIS']
trainArr = train.as_matrix(cols)
trainRes = np.ravel(train.as_matrix(colsRes))
num_folds = 10
num_instances = len(trainArr)
seed = 7
kfold = cross_validation.KFold(n=num_instances, n_folds=num_folds, random_state=seed)
estimators = []
model1 = GaussianNB()
estimators.append(('NaiveBayes', model1))
model2 = DecisionTreeClassifier()
estimators.append(('cart', model2))
model3 = SVC()
estimators.append(('svm', model2))
ensemble = VotingClassifier(estimators)
results = cross_validation.cross_val_score(ensemble, trainArr, trainRes, cv=kfold)
print(results.mean()*100)